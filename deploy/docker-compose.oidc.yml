# Compose override to enable Grafana OIDC SSO in production
# Usage:
#   docker-compose -f deploy/docker-compose.yml -f deploy/docker-compose.oidc.yml up -d grafana
services:
  grafana:
    environment:
      GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
      GF_AUTH_GENERIC_OAUTH_NAME: "SSO"
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "${GRAFANA_OIDC_CLIENT_ID}"
      # Prefer secret file for client secret in production
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET__FILE: "/run/secrets/grafana_oidc_client_secret"
      GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email groups"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: "${GRAFANA_OIDC_AUTH_URL}"
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "${GRAFANA_OIDC_TOKEN_URL}"
      GF_AUTH_GENERIC_OAUTH_API_URL: "${GRAFANA_OIDC_USERINFO_URL}"
      GF_AUTH_SIGNOUT_REDIRECT_URL: "${GRAFANA_OIDC_SIGNOUT_URL:-}"
      GF_AUTH_OAUTH_ALLOW_INSECURE_EMAIL_LOOKUP: "false"
      GF_AUTH_GENERIC_OAUTH_USE_PKCE: "true"
      GF_AUTH_OAUTH_AUTO_LOGIN: "false"
      GF_SERVER_ROOT_URL: "${GRAFANA_ROOT_URL}"
      # Role mapping via claim (groups or roles)
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: |-
        contains(groups[*], 'grafana-admin') && 'Admin' ||
        contains(groups[*], 'grafana-editor') && 'Editor' || 'Viewer'
      # Keep local login enabled until SSO is verified
      GF_AUTH_DISABLE_LOGIN_FORM: "false"
      GF_AUTH_BASIC_ENABLED: "false"
    secrets:
      - source: grafana_oidc_client_secret
        target: grafana_oidc_client_secret

secrets:
  grafana_oidc_client_secret:
    file: ./grafana/credentials/oidc_client_secret.txt
