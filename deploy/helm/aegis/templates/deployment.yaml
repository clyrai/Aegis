apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aegis.fullname" . }}
  labels:
    {{- include "aegis.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "aegis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "aegis.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
        {{- if .Values.securityContext.seccompProfile }}
        seccompProfile:
          type: {{ .Values.securityContext.seccompProfile.type }}
        {{- end }}
      {{- if .Values.mtls.enabled }}
      volumes:
        - name: certs
          secret:
            secretName: {{ .Values.mtls.secretName }}
      {{- end }}
      containers:
        - name: api
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8000
          securityContext:
            allowPrivilegeEscalation: {{ .Values.containerSecurityContext.allowPrivilegeEscalation }}
            readOnlyRootFilesystem: {{ .Values.containerSecurityContext.readOnlyRootFilesystem }}
            capabilities:
              drop: {{ toJson .Values.containerSecurityContext.capabilities.drop }}
          env:
            - name: AEGIS_REQUIRE_MTLS_SIM
              value: "{{ ternary "1" "0" .Values.env.requireMtlsSim }}"
            - name: GUNICORN_WORKERS
              value: "{{ .Values.env.gunicorn.workers }}"
            - name: GUNICORN_BIND
              value: "{{ .Values.env.gunicorn.bind }}"
            - name: GUNICORN_TIMEOUT
              value: "{{ .Values.env.gunicorn.timeout }}"
          {{- if .Values.mtls.enabled }}
          volumeMounts:
            - name: certs
              mountPath: /etc/aegis/certs
              readOnly: true
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
      {{- if .Values.topologySpreadConstraints.enabled }}
      topologySpreadConstraints:
        - maxSkew: {{ .Values.topologySpreadConstraints.maxSkew }}
          topologyKey: {{ .Values.topologySpreadConstraints.topologyKey }}
          whenUnsatisfiable: {{ .Values.topologySpreadConstraints.whenUnsatisfiable }}
          labelSelector:
            matchLabels:
              {{- include "aegis.selectorLabels" . | nindent 14 }}
      {{- end }}
